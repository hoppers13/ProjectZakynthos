@using ProjectZakynthos.Domain.Philately
@using Newtonsoft.Json
@model PhilatelicItem

<!-- BID FORM-->
<div id="bid-form" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="handlebars-placeholder" class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">{{dealer}} - <span class="red">£{{startingBid}}</span></h4>                
            </div>
            <div class="modal-body">
                <div class="row img-circle">                    
                    <div class="col-md-10 col-lg-offset-1"> <img id="bid-form-image" title="item image here" :src='lotScan'  /></div>
                </div>
                <div class="row">
                    <div id="bid-suggestion" class="col-md-10 col-lg-offset-1"> 
                        <p id="lot-description">
                            {{lotDescription}}
                        </p>
                        <form action="place-bid-with-auction-house">
                            € <input type="text" />
                            <input type="submit" class="btn btn-info btn-lg" value="place bid" />
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@{
    var lots = Model.UpcomingAuctions.Select(auction => new {
        id = auction.Id,
        dealer = auction.AuctionHouse,
        lotScan = auction.LotScan,
        lotDescription = auction.LotDescription,
        startingBid = auction.StartingBid
    });
    var lotsJson = JsonConvert.SerializeObject(lots);
}

<script src="https://unpkg.com/vue"></script>
<script>
    var lots = @Html.Raw(lotsJson);

	function selectLot(guid) {
		for (var i = 0; i < lots.length; i++) {
			if (lots[i].id === guid) {
				var result = lots[i];
				bidFormData.id = result.id;
				bidFormData.dealer = result.dealer;
				bidFormData.lotScan = result.lotScan;
				bidFormData.lotDescription = result.lotDescription;
                bidFormData.startingBid = result.startingBid;    
				//alert(JSON.stringify(bidFormData, null, 3));

				return;
			}
		}        
    }

	var bidFormData = {
		id: null,
		dealer: '',
		lotScan: '',
        lotDescription: '',
        startingBid: 0
	}

    var app = new Vue({
        el: '#bid-form',
		data: bidFormData
    })
</script>

<div id="upcoming-auctions">
    <h3> Upcoming Auctions</h3>
    @if (Model.UpcomingAuctions == null || !Model.UpcomingAuctions.Any())
    {
        <em>This item is not auctioned at the moment</em>
    }
    else
    {
        foreach (var auction in Model.UpcomingAuctions.OrderBy(x => x.AuctionDate))
        {
            <div class="row">
                <div class="col-md-4">@auction.AuctionDate.Date.ToShortDateString()</div>
                <div class="col-md-4">@auction.AuctionHouse</div>
                <div class="col-md-2">£@auction.StartingBid</div>
                <div class="col-md-2"><a class="red pointer" data-toggle="modal" data-target="#bid-form" onclick="selectLot('@auction.Id')">bid</a></div>
            </div>
        }
    }
</div>

